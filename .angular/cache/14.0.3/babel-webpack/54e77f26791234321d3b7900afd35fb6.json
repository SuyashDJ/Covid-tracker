{"ast":null,"code":"import Highcharts from 'highcharts/highmaps';\nimport worldMap from '@highcharts/map-collection/custom/world.geo.json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/map-service.service\";\nimport * as i2 from \"highcharts-angular\";\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(covidSerive) {\n      this.covidSerive = covidSerive;\n      this.countryData = [];\n      this.Highcharts = Highcharts;\n      this.chartConstructor = 'mapChart';\n      this.chartData = [{\n        code3: 'ABW',\n        z: 105\n      }, {\n        code3: 'AFG',\n        z: 35530\n      }];\n      this.chartOptions = {\n        chart: {\n          map: worldMap\n        },\n        title: {\n          text: null,\n          style: {\n            display: 'none'\n          }\n        },\n        mapNavigation: {\n          enabled: true,\n          buttonOptions: {\n            alignTo: 'spacingBox'\n          }\n        },\n        legend: {\n          enabled: true\n        },\n        colorAxis: {\n          min: 0\n        },\n        series: [{\n          type: 'map',\n          name: 'covid 19 - data',\n          states: {\n            hover: {\n              color: '#BADA55'\n            }\n          },\n          dataLabels: {\n            enabled: true,\n            format: '{point.name}'\n          },\n          // joinBy: ['hc-key', 'key'],\n          joinBy: ['name', 'key'],\n          allAreas: false,\n          data: this.countryData\n        }]\n      };\n    } // chartOptions: Highcharts.Options\n\n\n    ngOnInit() {\n      this.covidSerive.getCovidCountries(\"\").subscribe(data => {\n        data = data.response;\n\n        for (let i = 0; i <= data.length; i++) {\n          let countryObj = {};\n          countryObj['key'] = data[i];\n          countryObj['index'] = i;\n          console.log(countryObj);\n          this.countryData.push(countryObj);\n        }\n\n        this.copyCountryData = this.countryData;\n        this.pointData = [{\n          \"countryCode\": \"india\"\n        }];\n        this.chartOptions = {\n          chart: {\n            map: worldMap\n          },\n          title: {\n            text: null,\n            style: {\n              display: 'none'\n            }\n          },\n          mapNavigation: {\n            enabled: true,\n            buttonOptions: {\n              alignTo: 'spacingBox'\n            }\n          },\n          legend: {\n            enabled: true\n          },\n          colorAxis: {\n            min: 0\n          },\n          series: [{\n            type: 'map',\n            name: 'covid 19 - data',\n            states: {\n              hover: {\n                color: '#BADA55'\n              }\n            },\n            dataLabels: {\n              enabled: true,\n              format: '{point.name}'\n            },\n            // joinBy: ['hc-key', 'key'],\n            joinBy: ['name', 'key'],\n            allAreas: false,\n            data: this.countryData\n          }]\n        };\n      });\n      this.statisticsData();\n    }\n\n    statisticsData() {\n      this.highcharts2 = Highcharts;\n      this.chartOptions2 = {\n        chart: {\n          plotBorderWidth: null,\n          plotShadow: false\n        },\n        title: {\n          text: 'Browser market shares at a specific website, 2014'\n        },\n        tooltip: {\n          pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n        },\n        plotOptions: {\n          pie: {\n            shadow: false,\n            center: ['50%', '50%'],\n            size: '45%',\n            innerSize: '20%'\n          }\n        },\n        series: [{\n          type: 'pie',\n          name: 'Browser share',\n          data: [['Firefox', 45.0], ['IE', 26.8], {\n            name: 'Chrome',\n            y: 12.8,\n            sliced: true,\n            selected: true\n          }, ['Safari', 8.5], ['Opera', 6.2], ['Others', 0.7]]\n        }]\n      };\n    }\n\n  }\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.MapService));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 6,\n    vars: 5,\n    consts: [[1, \"headline\"], [\"id\", \"container\", 2, \"width\", \"100%\", \"height\", \"400px\", \"display\", \"block\", 3, \"Highcharts\", \"constructorType\", \"options\"], [1, \"col-xl-6\", \"col-lg-6\", \"col-md-4\", \"col-sm-6\", \"col-xs-12\"], [2, \"width\", \"100%\", \"height\", \"400px\", \"display\", \"block\", 3, \"Highcharts\", \"options\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h4\", 0);\n        i0.ɵɵtext(1, \"Covid-19 - Global trend\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"highcharts-chart\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelement(4, \"highcharts-chart\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"div\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"Highcharts\", ctx.Highcharts)(\"constructorType\", ctx.chartConstructor)(\"options\", ctx.chartOptions);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"Highcharts\", ctx.highcharts2)(\"options\", ctx.chartOptions2);\n      }\n    },\n    dependencies: [i2.HighchartsChartComponent],\n    styles: [\".highcharts-figure[_ngcontent-%COMP%], .highcharts-data-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{min-width:320px;max-width:800px;margin:1em auto}.highcharts-data-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{font-family:Verdana,sans-serif;border-collapse:collapse;border:1px solid #ebebeb;margin:10px auto;text-align:center;width:100%;max-width:500px}.highcharts-data-table[_ngcontent-%COMP%]   caption[_ngcontent-%COMP%]{padding:1em 0;font-size:1.2em;color:#555}.highcharts-data-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:600;padding:.5em}.highcharts-data-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], .highcharts-data-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .highcharts-data-table[_ngcontent-%COMP%]   caption[_ngcontent-%COMP%]{padding:.5em}.highcharts-data-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%], .highcharts-data-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(even){background:#f8f8f8}.highcharts-data-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background:#f1f7ff}input[type=number][_ngcontent-%COMP%]{min-width:50px}\"]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}